/*
 * This file is generated by jOOQ.
 */
package com.soarse.abac.demo.generated.jooq.tables.records;


import com.soarse.abac.demo.generated.jooq.tables.Employee;

import java.util.UUID;

import org.jooq.Field;
import org.jooq.JSONB;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.TableRecordImpl;


/**
 * Сотрудники медиахолдинга Логос
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EmployeeRecord extends TableRecordImpl<EmployeeRecord> implements Record7<UUID, String, String, JSONB, JSONB, String, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>abac_demo.employee.id</code>. Уникальный ID
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>abac_demo.employee.id</code>. Уникальный ID
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>abac_demo.employee.name</code>. Имя
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>abac_demo.employee.name</code>. Имя
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>abac_demo.employee.branch</code>. Отделение холдинга
     */
    public void setBranch(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>abac_demo.employee.branch</code>. Отделение холдинга
     */
    public String getBranch() {
        return (String) get(2);
    }

    /**
     * Setter for <code>abac_demo.employee.roles</code>. Роли
     */
    public void setRoles(JSONB value) {
        set(3, value);
    }

    /**
     * Getter for <code>abac_demo.employee.roles</code>. Роли
     */
    public JSONB getRoles() {
        return (JSONB) get(3);
    }

    /**
     * Setter for <code>abac_demo.employee.skills</code>. Список компетенций
     */
    public void setSkills(JSONB value) {
        set(4, value);
    }

    /**
     * Getter for <code>abac_demo.employee.skills</code>. Список компетенций
     */
    public JSONB getSkills() {
        return (JSONB) get(4);
    }

    /**
     * Setter for <code>abac_demo.employee.passport</code>. Номер паспорта
     */
    public void setPassport(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>abac_demo.employee.passport</code>. Номер паспорта
     */
    public String getPassport() {
        return (String) get(5);
    }

    /**
     * Setter for <code>abac_demo.employee.salary</code>. Зарплата в рублях
     */
    public void setSalary(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>abac_demo.employee.salary</code>. Зарплата в рублях
     */
    public Integer getSalary() {
        return (Integer) get(6);
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<UUID, String, String, JSONB, JSONB, String, Integer> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<UUID, String, String, JSONB, JSONB, String, Integer> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return Employee.EMPLOYEE.ID;
    }

    @Override
    public Field<String> field2() {
        return Employee.EMPLOYEE.NAME;
    }

    @Override
    public Field<String> field3() {
        return Employee.EMPLOYEE.BRANCH;
    }

    @Override
    public Field<JSONB> field4() {
        return Employee.EMPLOYEE.ROLES;
    }

    @Override
    public Field<JSONB> field5() {
        return Employee.EMPLOYEE.SKILLS;
    }

    @Override
    public Field<String> field6() {
        return Employee.EMPLOYEE.PASSPORT;
    }

    @Override
    public Field<Integer> field7() {
        return Employee.EMPLOYEE.SALARY;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getBranch();
    }

    @Override
    public JSONB component4() {
        return getRoles();
    }

    @Override
    public JSONB component5() {
        return getSkills();
    }

    @Override
    public String component6() {
        return getPassport();
    }

    @Override
    public Integer component7() {
        return getSalary();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getBranch();
    }

    @Override
    public JSONB value4() {
        return getRoles();
    }

    @Override
    public JSONB value5() {
        return getSkills();
    }

    @Override
    public String value6() {
        return getPassport();
    }

    @Override
    public Integer value7() {
        return getSalary();
    }

    @Override
    public EmployeeRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public EmployeeRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public EmployeeRecord value3(String value) {
        setBranch(value);
        return this;
    }

    @Override
    public EmployeeRecord value4(JSONB value) {
        setRoles(value);
        return this;
    }

    @Override
    public EmployeeRecord value5(JSONB value) {
        setSkills(value);
        return this;
    }

    @Override
    public EmployeeRecord value6(String value) {
        setPassport(value);
        return this;
    }

    @Override
    public EmployeeRecord value7(Integer value) {
        setSalary(value);
        return this;
    }

    @Override
    public EmployeeRecord values(UUID value1, String value2, String value3, JSONB value4, JSONB value5, String value6, Integer value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EmployeeRecord
     */
    public EmployeeRecord() {
        super(Employee.EMPLOYEE);
    }

    /**
     * Create a detached, initialised EmployeeRecord
     */
    public EmployeeRecord(UUID id, String name, String branch, JSONB roles, JSONB skills, String passport, Integer salary) {
        super(Employee.EMPLOYEE);

        setId(id);
        setName(name);
        setBranch(branch);
        setRoles(roles);
        setSkills(skills);
        setPassport(passport);
        setSalary(salary);
    }
}
